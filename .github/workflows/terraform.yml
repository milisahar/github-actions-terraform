# name: "Terraform action"
# on:
#   push:
#     branches:
#       - main
#   pull_request:
# permissions:
#       id-token: write # This is required for aws oidc connection
#       contents: read # This is required for actions/checkout
#       pull-requests: write # This is required for gh bot to comment PR
# env:
#   TF_LOG: INFO
#   AWS_REGION: ${{ secrets.AWS_REGION }}
# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         shell: bash
#         working-directory: .
#     steps:
#       - name: Git checkout
#         uses: actions/checkout@v3

#       - name: Configure AWS credentials from AWS account
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           role-to-assume: ${{ secrets.AWS_ROLE }}
#           aws-region: ${{ secrets.AWS_REGION }}
#           role-session-name: GitHub-OIDC-TERRAFORM

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: 1.2.5

#       - name: Terraform fmt
#         id: fmt
#         run: terraform fmt -check
#         continue-on-error: true

#       - name: Terraform Init
#         id: init
#         env:
#           AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
#           AWS_BUCKET_KEY_NAME: ${{ secrets.AWS_BUCKET_KEY_NAME }}
#         run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="key=${AWS_BUCKET_KEY_NAME}" -backend-config="region=${AWS_REGION}"

#       - name: Terraform Validate
#         id: validate
#         run: terraform validate -no-color

#       - name: Terraform Plan
#         id: plan
#         run: terraform plan -no-color
#         if: github.event_name == 'pull_request'
#         continue-on-error: true

#       - uses: actions/github-script@v6
#         if: github.event_name == 'pull_request'
#         env:
#           PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
#         with:
#           github-token: ${{ secrets.GITHUB_TOKEN }}
#           script: |
#             const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
#             #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
#             #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
#             <details><summary>Validation Output</summary>

#             \`\`\`\n
#             ${{ steps.validate.outputs.stdout }}
#             \`\`\`

#             </details>

#             #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

#             <details><summary>Show Plan</summary>

#             \`\`\`\n
#             ${process.env.PLAN}
#             \`\`\`

#             </details>

#             *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

#             github.rest.issues.createComment({
#               issue_number: context.issue.number,
#               owner: context.repo.owner,
#               repo: context.repo.repo,
#               body: output
#             })

#       - name: Terraform Plan Status
#         if: steps.plan.outcome == 'failure'
#         run: exit 1

#       - name: Terraform Apply
#         if: github.ref == 'refs/heads/main' && github.event_name == 'push'
#         run: terraform apply -auto-approve -input=false
name: Terraform Pull Request

on:
  pull_request:
    branches:
      - master

jobs:
  tflint:
    name: TFLint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.5

      - name: Install TFLint
        run: |
          curl -L "$(curl -s https://api.github.com/repos/terraform-linters/tflint/releases/latest | grep -o -E "https://.+?_Linux_x86_64\.zip")" -o tflint.zip
          unzip tflint.zip
          sudo mv tflint /usr/local/bin/
          rm tflint.zip

      - name: Initialize TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint

  terraform_apply:
    name: Terraform validate
    needs: tflint
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.ref == 'refs/heads/master'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan
